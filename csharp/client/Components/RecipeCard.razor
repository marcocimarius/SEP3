@using BlazorApp1.Pages
@using Recipe = Via.Dk.Recipe
<div tabindex="@GetTabIndex()" aria-label="@GetLabel()"
     class="relative rounded overflow-hidden shadow-lg @(IsSelected ? "bg-green-100 border border-green-500" : "") @(Disabled ? "cursor-not-allowed bg-gray-400/20 border border-gray-300" : "") @GetSelectableClasses()"
     onclick="@OnSelect">
    @if(Editable){
    <div class="absolute top-2 right-2 flex gap-2 z-10 justify-end">
        <button class="bg-white font-normal text-sm hover:bg-yellow-300 text-black py-2 px-4 rounded" @onclick="ModifyRecipe">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20px" height="20px">
                <path d="M 20.707031 5.2929688 L 18.707031 3.2929688 C 18.316031 2.9029688 17.683969 2.9029688 17.292969 3.2929688 L 15.292969 5.2929688 L 18.707031 8.7070312 L 20.707031 6.7070312 C 21.098031 6.3160312 21.098031 5.6839688 20.707031 5.2929688 z M 14.585938 6 L 4 16.585938 L 4 20 L 7.4140625 20 L 18 9.4140625 L 14.585938 6 z"/>
            </svg>
        </button>
        <button class="bg-white font-normal text-sm hover:bg-red-500 text-black py-2 px-4 rounded" @onclick="DeleteRecipe">
            <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" width="20px" height="20px">
                <path d="M 3 6 L 5 6 L 21 6 L 21 8 L 19 8 L 19 20 C 19 21.104 18.104 22 17 22 L 7 22 C 5.896 22 5 21.104 5 20 L 5 8 L 3 8 L 3 6 z M 7 8 L 7 20 L 17 20 L 17 8 L 7 8 z M 9 10 L 11 10 L 11 18 L 9 18 L 9 10 z M 13 10 L 15 10 L 15 18 L 13 18 L 13 10 z"/>
            </svg>
        </button>
    </div>
    }
    <img class="w-fit h-1/3 object-cover mx-auto" src="@ImageUrl" alt="Sunset in the mountains">
    <div class="px-6 py-4">
        <div class="font-bold text-xl mb-3">@Title</div>
        <ul class="flex gap-2 mb-2 font-semibold">
            @foreach (string ing in Ingredients)
            {
                <span class="first-of-type:hidden">â€¢</span>
                <li class="">@ing</li>
            }
        </ul>
        <hr class="border-gray-200 mb-3"/>
        <p class="text-gray-700 text-base mb-3">@Description</p>
        <div class="flex gap-2 mb-3 flex-wrap">
            <span
                class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700">@Type</span>
        </div>
        @if (Allergens != null && Allergens.Count > 0)
        {
            <div class="flex gap-2 mb-3 flex-wrap">
                @foreach (string allergen in Allergens)
                {
                    <span
                        class="inline-block bg-green-600 rounded-full px-3 py-1 text-sm font-semibold text-gray-700">@allergen</span>
                }
            </div>
        }
    </div>
</div>

@code {
    [Parameter] public int Id { get; set; }
    [Parameter] public string Title { get; set; } = "Spaghetti bolognese";
    [Parameter] public string Description { get; set; } = "Test description";
    [Parameter] public string ImageUrl { get; set; } = "https://placehold.co/600x400";
    [Parameter] public bool Editable { get; set; } = false;
    [Parameter] public string Type { get; set; }
    [Parameter] public IReadOnlyList<string> Ingredients { get; set; }
    [Parameter] public IReadOnlyList<string> Allergens { get; set; }
    [Parameter] public EventCallback<string> OnSelected { get; set; }
    [Parameter] public bool Selectable { get; set; } = false;
    [Parameter] public bool IsSelected { get; set; }
    [Parameter] public bool Disabled { get; set; }

    private int GetTabIndex()
    {
        return Selectable ? 0 : -1;
    }

    private string GetLabel()
    {
        return Selectable ? "Select recipe " + Title : "";
    }

    private string GetSelectableClasses()
    {
        return Selectable ? "cursor-pointer" : "";
    }

    private void OnSelect()
    {
        if (Disabled) return;
        OnSelected.InvokeAsync(Id.ToString());
    }

    private void ModifyRecipe()
    {
        OnSelected.InvokeAsync("modify:" + Id);
    }

    private void DeleteRecipe()
    {
        OnSelected.InvokeAsync("delete:" + Id);
    }
}