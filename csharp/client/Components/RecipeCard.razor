@using BlazorApp1.Pages
@using Recipe = Via.Dk.Recipe
<div tabindex="@GetTabIndex()" aria-label="@GetLabel()"
     class="rounded overflow-hidden shadow-lg @GetSelectableClasses() @(IsSelected ? "bg-green-100 border border-green- 500" : "")"
     onclick="@OnSelect">
    <img class="w-fit h-1/3 object-cover mx-auto" src="@ImageUrl" alt="Sunset in the mountains">
    <div class="px-6 py-4">
        <div class="font-bold text-xl mb-3">@Title</div>
        <ul class="flex gap-2 mb-2 font-semibold">
            @foreach (string ing in Ingredients)
            {
                <span class="first-of-type:hidden">â€¢</span>
                <li
                    class="">@ing</li>
            }
        </ul>
        <hr class="border-gray-200 mb-3"/>
        <p class="text-gray-700 text-base mb-3">@Description</p>
        <div class="flex gap-2 mb-3 flex-wrap">
                <span
                    class="inline-block bg-gray-200 rounded-full px-3 py-1 text-sm font-semibold text-gray-700">@Type</span>
        </div>
        @if (Editable)
        {
            <div class="flex justify-end gap-2 w-full">
                <button class="bg-yellow-500 font-normal text-sm hover:bg-yellow-600 text-white py-2 px-4 rounded">
                    Edit
                </button>
                <button class="bg-red-600 font-normal text-sm hover:bg-red-600 text-white py-2 px-4 rounded">Delete
                </button>
            </div>
        }
    </div>
</div>

@code































































{

    [Parameter] public int Id { get; set; }
    [Parameter] public string Title { get; set; } = "Spaghetti bolognese";
    [Parameter] public string Description { get; set; } = "Test description";
    [Parameter] public string ImageUrl { get; set; } = "https://placehold.co/600x400";
    [Parameter] public bool Editable { get; set; } = false;
    [Parameter] public string Type { get; set; }
    [Parameter] public IReadOnlyList<string> Ingredients { get; set; }
    [Parameter] public EventCallback<string> OnSelected { get; set; }
    [Parameter] public bool Selectable { get; set; } = false;
    [Parameter] public bool IsSelected { get; set; }

    private int GetTabIndex()
    {
        return Selectable ? 0 : -1;
    }

    private string GetLabel()
    {
        return Selectable ? "Select recipe " + Title : "";
    }

    private string GetSelectableClasses()
    {
        return Selectable ? "cursor-pointer" : "";
    }

    private void OnSelect()
    {
        OnSelected.InvokeAsync(Id.ToString());
    }
}
