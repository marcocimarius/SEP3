using api.dto;
using api.utils;
using grpc;
using Microsoft.AspNetCore.Mvc;
using Via.Dk;

namespace api;

[ApiController]
[Route("api/[controller]")]
public class IngredientsController : ControllerBase
{
    private readonly GrpcClient _grpcService;

    public IngredientsController(GrpcClient grpcService)
    {
        _grpcService = grpcService;
    }

    [HttpPost]
    public async Task<ActionResult<string>> CreateIngredient([FromBody] CreateIngredientRequest ingredient)
    {
        return await this._grpcService.IngredientsClient.CreateIngredientAsync(ingredient);
    }

    [HttpPut()]
    // [HttpPut("{id:int}")]
    public async Task<ActionResult<string>> UpdateIngredient([FromBody] UpdateIngredientDto ingredient)
    {
        var request = new UpdateIngredientRequest()
        {
            Id = ingredient.Id,
            Name = ingredient.Name,
            Calories = ingredient.Calories,
            IsAllergen = ingredient.IsAllergen,
            TypeId = ingredient.TypeId
        };
        return await this._grpcService.IngredientsClient.UpdateIngredientAsync(request);
    }

    [HttpDelete()]
    // [HttpDelete("{id:int}")]
    public async Task<ActionResult<string>> DeleteIngredient([FromBody] DeleteIngredientRequest ingredient)
    {
        return await this._grpcService.IngredientsClient.DeleteIngredientAsync(ingredient);
    }
    
    [HttpGet]
    //ingredient is auto generated by grpc, might cause issues in the future
    public async Task<IResult> GetAllIngredients()
    {
        List<Ingredient> ingredients = (await _grpcService.IngredientsClient.GetAllIngredientsAsync()).ToList();
        if (ingredients.Count == 0)
        {
            return Results.NoContent();
        }
        
        return Results.Ok(ingredients);
    }
}